delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(fuegos)
plot1 <- ggplot(fuegos, aes(x=year, y=n)) + geom_line()
plot1
ggplotly(plot1)
setwd("~/R_files/PORTFOLIO/Oz_bushfires_ThruininIII/OZ_bushfires")
install.packages('gridExtra')
NSW_fire_history <- read.csv2("NSW_fire_history_2024.csv",
col_types = c("text", "text", "text",  "date", "date", "numeric", "numeric", "date"))
getwed()
getwd()
library(readr)
NSW_fire_history_2024 <- read_csv("NSW_fire_history_2024.csv")
View(NSW_fire_history_2024)
rm(NS)
rm(NSW_fire_history_2024)
NSW_fire_history <- read.csv2("NSW_fire_history_2024.csv")
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history_orig <- read_excel("NSW_fire_history_Excel_Output3.xlsx",
col_types = c("text", "text", "text",  "date", "date", "numeric", "numeric", "date"))
library(tidyverse)
library(readxl)
library(lubridate)
library(MARSS)
library(forecast)
library(stats)
library(gridExtra)
library(reshape2)
library(tseries)
library(urca)
library(fable)
library(feasts)
library(plotly)
NSW_fire_history_orig <- read_excel("NSW_fire_history_Excel_Output3.xlsx",
col_types = c("text", "text", "text",  "date", "date", "numeric", "numeric", "date"))
View(NSW_fire_history_orig)
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
str(NSW_fire_history)
rm(NSW_fire_history)
library(readr)
NSW_fire_history_2024 <- read_csv("NSW_fire_history_2024.csv")
View(NSW_fire_history_2024)
NSW_fire_history <- read_csv("NSW_fire_history_2024.csv")
View(NSW_fire_history)
View(NSW_fire_history_orig)
rm(NSW_fire_history)
rm(NSW_fire_history_2024)
rm(NSW_fire_history_orig)
NSW_fire_history_orig <- read_excel("NSW_fire_history_Excel_Output3.xlsx",
col_types = c("text", "text", "text",  "date", "date", "numeric", "numeric", "date"))
NSW_fire_history <- read_csv("NSW_fire_history_2024.csv")
View(NSW_fire_history)
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history2 %>%
mutate(year = (as.numeric(sub(".*(\\d{4}).*", "\\1", NSW_fire_history2$Label)) +1) )  %>%
filter (year > 1952)
Total_Area_burned_year <- NSW_fire_history2%>%
group_by(year) %>%
summarize(TotalAreaHa = sum(AreaHa, na.rm = TRUE))
Nr_fires_year <- NSW_fire_history2%>%
group_by(year) %>%
count(year)
Total_Area_burned_year_ts <- as_tsibble(Total_Area_burned_year, index = year, key = TotalAreaHa)
Nr_fires_year_ts <- as_tsibble(Nr_fires_year, index = year, key = n)
graphNr1 <- ggplot(Total_Area_burned_year, aes(x=year, y=TotalAreaHa)) + geom_line()
graphNr1
ggplotly(graphNr1)
graphNr2 <- ggplot(Nr_fires_year, aes(x=year, y=n)) + geom_line()
graphNr2
library(readxl)
library(tseries)
library(Kendall)
library(forecast)
#### Using Nr. of fires/year data
Nr_fires_year_ts <- ts(Nr_fires_year$n, start = min(Nr_fires_year$year), frequency = 1)
# ADT Test
adf_test <- adf.test(Nr_fires_year_ts)
adf_test
# Mann-Kendall Trend Test
mk_test <- Kendall(Nr_fires_year$year, Nr_fires_year$n)
install.packages('Kendall')
library(Kendall)
# Mann-Kendall Trend Test
mk_test <- Kendall(Nr_fires_year$year, Nr_fires_year$n)
mk_test
# Linear Regression Analysis
lm_model <- lm(n ~ year, data = Nr_fires_year)
summary(lm_model)
# Plot the trend
ggplot(Nr_fires_year, aes(x = year, y = n)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Number of Fires per Year with Linear Trend", x = "Year", y = "Number of Fires")
# STL Decomposition
decomp <- stl(fires_ts, s.window = "periodic")
# Load necessary libraries
library(tseries)
library(zoo)
# Filter data for the two periods
period1 <- NSW_fire_history2 %>% filter(year >= 1920 & year <= 1957)
period2 <- NSW_fire_history2 %>% filter(year > 1980 & year <= 2017)
# Calculate number of fires and total area affected per year for both periods
fires_per_year_p1 <- period1 %>% group_by(year = year(StartDate)) %>% summarize(count = n(), total_area = sum(AreaHa, na.rm = TRUE))
fires_per_year_p2 <- period2 %>% group_by(year = year(StartDate)) %>% summarize(count = n(), total_area = sum(AreaHa, na.rm = TRUE))
# Descriptive statistics
desc_p1_fires <- summary(fires_per_year_p1$count)
desc_p2_fires <- summary(fires_per_year_p2$count)
desc_p1_area <- summary(fires_per_year_p1$total_area)
desc_p2_area <- summary(fires_per_year_p2$total_area)
# Normality test
normality_p1_fires <- shapiro.test(fires_per_year_p1$count)
normality_p2_fires <- shapiro.test(fires_per_year_p2$count)
normality_p1_area <- shapiro.test(fires_per_year_p1$total_area)
normality_p2_area <- shapiro.test(fires_per_year_p2$total_area)
# Variance test
var_test_fires <- var.test(fires_per_year_p1$count, fires_per_year_p2$count)
var_test_area <- var.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area)
# Mean comparison tests
if (normality_p1_fires$p.value > 0.05 & normality_p2_fires$p.value > 0.05) {
if (var_test_fires$p.value > 0.05) {
ttest_fires <- t.test(fires_per_year_p1$count, fires_per_year_p2$count, var.equal = TRUE)
} else {
ttest_fires <- t.test(fires_per_year_p1$count, fires_per_year_p2$count, var.equal = FALSE)
}
} else {
ttest_fires <- wilcox.test(fires_per_year_p1$count, fires_per_year_p2$count)
}
if (normality_p1_area$p.value > 0.05 & normality_p2_area$p.value > 0.05) {
if (var_test_area$p.value > 0.05) {
ttest_area <- t.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area, var.equal = TRUE)
} else {
ttest_area <- t.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area, var.equal = FALSE)
}
} else {
ttest_area <- wilcox.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area)
}
# Results
list(
desc_p1_fires = desc_p1_fires,
desc_p2_fires = desc_p2_fires,
desc_p1_area = desc_p1_area,
desc_p2_area = desc_p2_area,
normality_p1_fires = normality_p1_fires,
normality_p2_fires = normality_p2_fires,
normality_p1_area = normality_p1_area,
normality_p2_area = normality_p2_area,
var_test_fires = var_test_fires,
var_test_area = var_test_area,
ttest_fires = ttest_fires,
ttest_area = ttest_area
)
Nr_fires_year_disag <- Nr_fires_year %>% ungroup()
Nr_fires_year_ts <- as_tsibble(Nr_fires_year_disag, index = year)
fit <- Nr_fires_year_ts %>%
model(auto = ARIMA(n, stepwise = FALSE, approx = FALSE)   )
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
fit |>
select(auto) |>
gg_tsresiduals()
fit |>
forecast(h=5) |>
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts)
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(0,1,4), stepwise = FALSE, approx = FALSE)   )
fit_manualplot <- fit_manual |>
forecast(h=5) |>
filter(.model=='manual014') |>
autoplot(Nr_fires_year_ts)
fit
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(0,1,4), stepwise = FALSE, approx = FALSE)   )
fit_manualplot <- fit_manual |>
forecast(h=5) |>
filter(.model=='manual014') |>
autoplot(Nr_fires_year_ts)
ggplotly(fit_manualplot)
fit_manual
fit_manual |>
forecast(h=5) |>
filter(.model=='manual014') |>
autoplot(Nr_fires_year_ts)
ggplotly(fit_manual)
rm(fit_manualplot)
fit_manual_plot <- fit_manual
ggplotly(fit_manual_plot)
# Mean comparison tests
if (normality_p1_fires$p.value > 0.05 & normality_p2_fires$p.value > 0.05) {
if (var_test_fires$p.value > 0.05) {
ttest_fires <- t.test(fires_per_year_p1$count, fires_per_year_p2$count, var.equal = TRUE)
} else {
ttest_fires <- t.test(fires_per_year_p1$count, fires_per_year_p2$count, var.equal = FALSE)
}
} else {
ttest_fires <- wilcox.test(fires_per_year_p1$count, fires_per_year_p2$count, paired = TRUE, alternative = "two.sided")
}
View(NSW_fire_history2)
# Filter data for the two periods
period1 <- NSW_fire_history2 %>% filter(year >= 1953 & year <= 1957)
period2 <- NSW_fire_history2 %>% filter(year > 2000 & year <= 2017)
period2 <- NSW_fire_history2 %>% filter(year > 1980 & year <= 2017)
period2b <- NSW_fire_history2 %>% filter(year > 1980 & year <= 2017)
period2 <-NSW[sample(1:nrow(period2b),222, replace=FALSE),]
period2 <-period2b[sample(1:nrow(period2b),222, replace=FALSE),]
rm(period1)
rm(period2b)
rm(period2)
# Filter data for the two periods
period1 <- NSW_fire_history2 %>% filter(year >= 1953 & year <= 1957)
period2 <- NSW_fire_history2 %>% filter(year > 1980 & year <= 2017)
period2b <-period2[sample(1:nrow(period2),222, replace=FALSE),]
View(NSW_fire_history2)
range(NSW_fire_history$StartDate)
range(NSW_fire_history$AreaHa)
NSW_fire_history$StartDate <- as_date(NSW_fire_history$StartDate)
View(NSW_fire_history)
str(NSW_fire_history)
NSW_fire_history_orig <- read_excel("NSW_fire_history_Excel_Output3.xlsx",
col_types = c("text", "text", "text",  "date", "date", "numeric", "numeric", "date"))
NSW_fire_history <- read_csv("NSW_fire_history_2024.csv")
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history2 %>%
mutate(year = (as.numeric(sub(".*(\\d{4}).*", "\\1", NSW_fire_history2$Label)) +1) )  %>%
filter (year > 1952)
Total_Area_burned_year <- NSW_fire_history2%>%
group_by(year) %>%
summarize(TotalAreaHa = sum(AreaHa, na.rm = TRUE))
Nr_fires_year <- NSW_fire_history2%>%
group_by(year) %>%
count(year)
str(NSW_fire_history)
test <- NSW_fire_history %>% arrange_all(StartDate)
test <- NSW_fire_history %>% arrange (StartDate)
View(test)
range(NSW_fire_history$StartDate)
test <- NSW_fire_history$StartDate %<% na.omit ()
test <- NSW_fire_history$StartDate %>% na.omit ()
range(test)
date_range <- NSW_fire_history %>%
select (StartDate) %>%
arrange () %>%
na.omit ()
range(date_range)
View(date_range)
str(date_range)
str(test)
datetest <- NSW_fire_history$StartDate %<% na.omit ()
datetest <- NSW_fire_history$StartDate %>% na.omit ()
range(datetest)
BasicSummary <- function(df, dgts = 3){
## ################################################################
## #
## # Create a basic summary of variables in the data frame df,
## # a data frame with one row for each column of df giving the
## # variable name, type, number of unique levels, the most
## # frequent level, its frequency and corresponding fraction of
## # records, the number of missing values and its corresponding
## # fraction of records
## #
## ################################################################
m <- ncol(df)
varNames <- colnames(df)
varType <- vector("character",m)
topLevel <- vector("character",m)
topCount <- vector("numeric",m)
missCount <- vector("numeric",m)
levels <- vector("numeric", m)
for (i in 1:m)
{
x <- df[,i]
varType[i] <- class(x)
xtab <- table(x, useNA = "ifany")
levels[i] <- length(xtab)
nums <- as.numeric(xtab)
maxnum <- max(nums)
topCount[i] <- maxnum
maxIndex <- which.max(nums)
lvls <- names(xtab)
topLevel[i] <- lvls[maxIndex]
missIndex <- which((is.na(x)) | (x == "") | (x == " "))
missCount[i] <- length(missIndex)
}
n <- nrow(df)
topFrac <- round(topCount/n, digits = dgts)
missFrac <- round(missCount/n, digits = dgts)
#
summaryFrame <- data.frame(variable = varNames, type = varType,
levels = levels, topLevel = topLevel,
topCount = topCount, topFrac = topFrac,
missFreq = missCount, missFrac = missFrac)
return(summaryFrame)
}
BasicSummary(NSW_fire_history)
BasicSummary(NSW_fire_history$StartDate)
glimpse
glimpse(NSW_fire_history)
sum(is.na(NSW_fire_history$StartDate))
histo <- ggplot(NSW_fire_history$StartDate) + geom_histogram()
histo <- ggplot(NSW_fire_history, aes(StartDate) + geom_histogram()
)
histo <- ggplot(NSW_fire_history, mapping = aes(StartDate)) + geom_histogram()
histo
View(NSW_fire_history)
setwd("~/R_files/PORTFOLIO/Oz_bushfires_ThruininIII/OZ_bushfires")
library(tidyverse)
library(readxl)
library(lubridate)
library(MARSS)
library(forecast)
library(stats)
library(gridExtra)
library(reshape2)
library(tseries)
library(urca)
library(fable)
library(feasts)
library(plotly)
NSW_fire_history_orig <- read_excel("NSW_fire_history_Excel_Output3.xlsx",
col_types = c("text", "text", "text",  "date", "date", "numeric", "numeric", "date"))
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history2 %>%
mutate(year = (as.numeric(sub(".*(\\d{4}).*", "\\1", NSW_fire_history2$Label)) +1) )  %>%
filter (year > 1952)
Total_Area_burned_year <- NSW_fire_history2%>%
group_by(year) %>%
summarize(TotalAreaHa = sum(AreaHa, na.rm = TRUE))
Nr_fires_year <- NSW_fire_history2%>%
group_by(year) %>%
count(year)
Total_Area_burned_year <- as.data.frame(Total_Area_burned_year)
library(tseries)
NSW_fire_history <- read_csv("NSW_fire_history_2024.csv")
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history2 %>%
mutate(year = (as.numeric(sub(".*(\\d{4}).*", "\\1", NSW_fire_history2$Label)) +1) )  %>%
filter (year > 1952)
Total_Area_burned_year <- NSW_fire_history2%>%
group_by(year) %>%
summarize(TotalAreaHa = sum(AreaHa, na.rm = TRUE))
Nr_fires_year <- NSW_fire_history2%>%
group_by(year) %>%
count(year)
Total_Area_burned_year <- as.data.frame(Total_Area_burned_year)
Total_Area_burned_year$year <- as.integer(Total_Area_burned_year$year)
Total_Area_burned_year$TotalAreaHa <- as.integer(Total_Area_burned_year$TotalAreaHa)
Total_Area_burned_year_ts <- as_tsibble(Total_Area_burned_year, index = year, key = TotalAreaHa)
Nr_fires_year_ts <- as_tsibble(Nr_fires_year, index = year, key = n)
graphNr1 <- ggplot(Total_Area_burned_year, aes(x=year, y=TotalAreaHa)) + geom_line()
histo <- ggplot(NSW_fire_history, mapping = aes(StartDate)) + geom_histogram() + geom_density(fill='red')
histo
histo <- ggplot(NSW_fire_history, mapping = aes(StartDate)) + geom_histogram() + geom_density(fill='red')
histo
histo <- ggplot(NSW_fire_history, mapping = aes(StartDate)) + geom_histogram(color='red')
histo
histo <- ggplot(NSW_fire_history, mapping = aes(StartDate)) + geom_histogram(color='red', fill='red')
histo
histo <- ggplot(NSW_fire_history, mapping = aes(StartDate)) + geom_histogram(color='grey', fill='red')
histo
sum(is.na(NSW_fire_history2$Label))
NSW_fire_history %>%
summarise(across(everything(), ~ sum(is.na(.x))))
na_count <-sapply(NSW_fire_history, function(y) sum(length(which(is.na(y)))))
na_count <- as.data.frame(na_count)
na_count
getwd()
Total_Area_burned_year <- as.data.frame(Total_Area_burned_year)
Total_Area_burned_year$year <- as.integer(Total_Area_burned_year$year)
Total_Area_burned_year$TotalAreaHa <- as.integer(Total_Area_burned_year$TotalAreaHa)
Nr_fires_year_ts <- as_tsibble(Nr_fires_year, index = year, key = n)
graphNr1 <- ggplot(Total_Area_burned_year, aes(x=year, y=TotalAreaHa)) + geom_line()
ggplotly(graphNr1)
graphNr1 = graphNr1 + scale_y_continuous(formatter = function(x) format(x/100000))
View(Total_Area_burned_year)
Total_Area_burned_year <- Total_Area_burned_year %>% mutate(Total_Area_thousand = TotalAreaHa/1000)
graphNr1 <- ggplot(Total_Area_burned_year, aes(x=year, y=Total_Area_thousand)) + geom_line()
graphNr1
Total_Area_burned_year <- Total_Area_burned_year %>% mutate(Total_Area_thousand = TotalAreaHa/1000000)
graphNr1 <- ggplot(Total_Area_burned_year, aes(x=year, y=Total_Area_thousand)) + geom_line()
graphNr1
ggplotly(graphNr1)
Total_Area_burned_year <- Total_Area_burned_year %>% mutate(Total_Area_million_Ha = TotalAreaHa/1000000)
graphNr1 <- ggplot(Total_Area_burned_year, aes(x=year, y=Total_Area_thousand)) + geom_line(color='red')
graphNr1
install.packages('formatR')
libraries <- c('tidyverse', 'lubridate', 'readxl', 'MARSS', "forecast", 'stats', 'gridExtra', 'feasts', 'stats', 'fable', 'plotly', 'tseries', 'urca', 'reshape2', 'formatR')
lapply(libraries, require , character.only = TRUE)
correr <- lapply(libraries, require , character.only = TRUE)
correr
libraries <- c('tidyverse', 'lubridate', 'readxl', 'MARSS', "forecast", 'stats', 'gridExtra', 'feasts', 'stats', 'fable', 'plotly', 'tseries', 'urca', 'reshape2', 'formatR')
apply(libraries, require , character.only = TRUE)
lapply(libraries, require , character.only = TRUE, quietly=TRUE)
lapply(libraries, require (quietly=TRUE) , character.only = TRUE)
invisible(lapply(libraries, require, character.only = TRUE))
lapply(libraries, require, character.only = TRUE)
library(tseries)
library(Kendall)
library(forecast)
df <- NSW_fire_history
#### Using Nr. of fires/year data
Nr_fires_year_ts <- ts(Nr_fires_year$n, start = min(Nr_fires_year$year), frequency = 1)
# STL Decomposition
decomp <- stl(Nr_fires_year_ts, s.window = "periodic")
plot(decomp)
Nr_fires_year_ts
# STL Decomposition
decomp <- stl(Nr_fires_year_ts, s.window = "4")
#### Using Nr. of fires/year data
Nr_fires_year_ts <- ts(Nr_fires_year$n, start = min(Nr_fires_year$year), frequency = 12)
# STL Decomposition
decomp <- stl(Nr_fires_year_ts, s.window = "periodic")
plot(decomp)
Nr_fires_year_ts
#### Using Nr. of fires/year data
Nr_fires_year_ts <- ts(Nr_fires_year$n, start = min(Nr_fires_year$year), frequency = 1)
View(Nr_fires_year)
# STL Decomposition
decomp <- stl(Nr_fires_year, s.window = "periodic")
# STL Decomposition
decomp <- stl(Nr_fires_year$n, s.window = "periodic")
# STL Decomposition
decomp <- stl(Nr_fires_year$n, s.window = "4")
# STL Decomposition
decomp <- stl(Nr_fires_year$n, s.window = "1")
plot(decomp)
# Load necessary libraries
library(tseries)
# STL Decomposition
decomp <- stl(Nr_fires_year$n, s.window = "1")
#### Using Nr. of fires/year data
Nr_fires_year_ts <- ts(Nr_fires_year$n, start = min(Nr_fires_year$year), frequency = 1)
# STL Decomposition
decomp <- stl(Nr_fires_year$n)
# STL Decomposition
decomp <- stl(Nr_fires_year_ts)
# STL Decomposition
decomp <- stl(Nr_fires_year_ts, t.window = 1, deltat(1))
plot(decomp)
# STL Decomposition
decomp <- stl(Nr_fires_year_ts, t.window = 1, deltat(1))
# ADF Test
adf_test <- adf.test(Nr_fires_year_ts)
adf_test
# Mann-Kendall Trend Test
mk_test <- Kendall(Nr_fires_year$year, Nr_fires_year$n)
mk_test
library(tidyverse)
library(readxl)
library(lubridate)
library(MARSS)
library(forecast)
library(stats)
library(gridExtra)
library(reshape2)
library(tseries)
library(feasts)
library(fable)
library(urca)
library(plotly)
BasicSummary <- function(df, dgts = 3){
## ################################################################
## #
## # Create a basic summary of variables in the data frame df,
## # a data frame with one row for each column of df giving the
## # variable name, type, number of unique levels, the most
## # frequent level, its frequency and corresponding fraction of
## # records, the number of missing values and its corresponding
## # fraction of records
## #
## ################################################################
m <- ncol(df)
varNames <- colnames(df)
varType <- vector("character",m)
topLevel <- vector("character",m)
topCount <- vector("numeric",m)
missCount <- vector("numeric",m)
levels <- vector("numeric", m)
for (i in 1:m)
{
x <- df[,i]
varType[i] <- class(x)
xtab <- table(x, useNA = "ifany")
levels[i] <- length(xtab)
nums <- as.numeric(xtab)
maxnum <- max(nums)
topCount[i] <- maxnum
maxIndex <- which.max(nums)
lvls <- names(xtab)
topLevel[i] <- lvls[maxIndex]
missIndex <- which((is.na(x)) | (x == "") | (x == " "))
missCount[i] <- length(missIndex)
}
n <- nrow(df)
topFrac <- round(topCount/n, digits = dgts)
missFrac <- round(missCount/n, digits = dgts)
#
summaryFrame <- data.frame(variable = varNames, type = varType,
levels = levels, topLevel = topLevel,
topCount = topCount, topFrac = topFrac,
missFreq = missCount, missFrac = missFrac)
return(summaryFrame)
}
NSW_fire_history <- read_excel("NSW_fire_history_2024.csv")
NSW_fire_history <- read.csv2("NSW_fire_history_2024.csv")
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
View(NSW_fire_history)
library(readr)
NSW_fire_history_2024 <- read_csv("NSW_fire_history_2024.csv")
View(NSW_fire_history_2024)
sum(is.na(NSW_fire_history_2024$StartDate))
sum(is.na(NSW_fire_history_2024$EndDate))
