install.packages('tydiverse')
install.packages('tidyverse')
install.packages('tidymodels')
library(fs)
library(tidyverse)
library(DBI)
library(sparklyr)
install.packages('sparkly')
install.packages('sparklyr')
# Available for installation
spark_available_versions()
library(tidyverse)
library(DBI)
library(sparklyr)
# Available for installation
spark_available_versions()
# Install Spark
spark_install(version = "3.1")
# Configuration Setup (Optional)
conf <- list()
conf$`sparklyr.cores.local`         <- 2
conf$`sparklyr.shell.driver-memory` <- "12G"
conf$spark.memory.fraction          <- 0.9
# Connects to Spark Locally
sc <- spark_connect(
master  = "local",
version = "3.1.1",
config  = conf
)
library(fs)
library(tidyverse)
library(DBI)
library(sparklyr)
# The version that is installed on your machine
spark_installed_versions()
# Configuration Setup (Optional)
conf <- list()
conf$`sparklyr.cores.local`         <- 2
conf$`sparklyr.shell.driver-memory` <- "12G"
conf$spark.memory.fraction          <- 0.9
# Connects to Spark Locally
sc <- spark_connect(
master  = "local",
version = "3.1.1",
config  = conf
)
# Connects to Spark Locally
sc <- spark_connect(
master  = "local",
version = "3.1.1",
config  = conf
)
install.packages('Rdatasets')
library(tidyverse)
library(readxl)
library(lubridate)
library(MARSS)
library(forecast)
library(stats)
library(gridExtra)
library(reshape2)
library(tseries)
library(urca)
library(fpp3)
us_employment %>% autoplot()
us_employment %>% autoplot(Employed)
us_employment %>% autoplot(Employed, index(Month))
test <- us_employment
BasicSummary <- function(df, dgts = 3){
## ################################################################
## #
## # Create a basic summary of variables in the data frame df,
## # a data frame with one row for each column of df giving the
## # variable name, type, number of unique levels, the most
## # frequent level, its frequency and corresponding fraction of
## # records, the number of missing values and its corresponding
## # fraction of records
## #
## ################################################################
m <- ncol(df)
varNames <- colnames(df)
varType <- vector("character",m)
topLevel <- vector("character",m)
topCount <- vector("numeric",m)
missCount <- vector("numeric",m)
levels <- vector("numeric", m)
for (i in 1:m)
{
x <- df[,i]
varType[i] <- class(x)
xtab <- table(x, useNA = "ifany")
levels[i] <- length(xtab)
nums <- as.numeric(xtab)
maxnum <- max(nums)
topCount[i] <- maxnum
maxIndex <- which.max(nums)
lvls <- names(xtab)
topLevel[i] <- lvls[maxIndex]
missIndex <- which((is.na(x)) | (x == "") | (x == " "))
missCount[i] <- length(missIndex)
}
n <- nrow(df)
topFrac <- round(topCount/n, digits = dgts)
missFrac <- round(missCount/n, digits = dgts)
#
summaryFrame <- data.frame(variable = varNames, type = varType,
levels = levels, topLevel = topLevel,
topCount = topCount, topFrac = topFrac,
missFreq = missCount, missFrac = missFrac)
return(summaryFrame)
}
BasicSummary(test)
glimpse(test)
sum(is.na(test$Employed))
sum(is.na(test$Month))
sum(is.na(test$Title))
View(test)
table(test$Title)
test <- test %>% filter('Hospitality')
test <- test %>% filter(Title == 'Hospitality')
test <- test %>% filter(Title %in% 'Hospitality')
test <- us_employment
test <- test %>% filter(Title %in% 'Hospitality')
library(plotly)
library(tidyverse)
library(readxl)
library(lubridate)
library(MARSS)
library(forecast)
library(stats)
library(gridExtra)
library(reshape2)
library(tseries)
library(urca)
library(fable)
library(feasts)
install.packages('MARSS')
library(lubridate)
library(MARSS)
library(fpp3)
setwd("~/R_files/PORTFOLIO/Oz_bushfires_ThruininIII/OZ_bushfires")
NSW_fire_history <- read_excel("NSW_fire_history_Excel_Output3.xlsx",
col_types = c("text", "text", "text",  "date", "date", "numeric", "numeric", "date"))
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history2 %>%
mutate(year = (as.numeric(sub(".*(\\d{4}).*", "\\1", NSW_fire_history2$Label)) +1) )  %>%
filter (year > 1952)
Total_Area_burned_year <- NSW_fire_history2%>%
group_by(year) %>%
summarize(TotalAreaHa = sum(AreaHa, na.rm = TRUE))
Nr_fires_year <- NSW_fire_history2%>%
group_by(year) %>%
count(year)
Total_Area_burned_year <- as_tsibble(Total_Area_burned_year, index = year, key = TotalAreaHa)
Nr_fires_year_ts <- as_tsibble(Nr_fires_year, index = year, key = n)
graphNr1 <- ggplot(Total_Area_burned_year, aes(x=year, y=TotalAreaHa)) + geom_line()
graphNr1
graphNr2 <- ggplot(Nr_fires_year, aes(x=year, y=n)) + geom_line()
graphNr2
library(tidyverse)
lapply(libraries, library())
library(feasts)
library(feasts)
library(plotly)
graph1plotly <- plot_ly(Total_Area_burned_year, x=year, y=TotalAreaHa ,type = "line")
View(Total_Area_burned_year)
Total_Area_burned_year <- as_tsibble(Total_Area_burned_year, index = year, key = TotalAreaHa)
Nr_fires_year_ts <- as_tsibble(Nr_fires_year, index = year, key = n)
graph1plotly <- plot_ly(Total_Area_burned_year, x=year, y=TotalAreaHa ,type = "line")
NSW_fire_history <- read_excel("NSW_fire_history_Excel_Output3.xlsx",
col_types = c("text", "text", "text",  "date", "date", "numeric", "numeric", "date"))
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history2 %>%
mutate(year = (as.numeric(sub(".*(\\d{4}).*", "\\1", NSW_fire_history2$Label)) +1) )  %>%
filter (year > 1952)
Total_Area_burned_year <- NSW_fire_history2%>%
group_by(year) %>%
summarize(TotalAreaHa = sum(AreaHa, na.rm = TRUE))
Nr_fires_year <- NSW_fire_history2%>%
group_by(year) %>%
count(year)
graph1plotly <- plot_ly(Total_Area_burned_year, x=year, y=TotalAreaHa ,type = "line")
View(Total_Area_burned_year)
graph1plotly <- plot_ly(Total_Area_burned_year, x=Total_Area_burned_year$year, y=Total_Area_burned_year$TotalAreaHa, type = "line")
graph1plotly
graph1plotly <- plot_ly(Total_Area_burned_year, x=Total_Area_burned_year$year, y=Total_Area_burned_year$TotalAreaHa, type = "scatter")
graph1plotly
Total_Area_burned_year_ts <- as_tsibble(Total_Area_burned_year, index = year, key = TotalAreaHa)
graph1plotly <- plot_ly(Total_Area_burned_year, x=Total_Area_burned_year$year, y=Total_Area_burned_year$TotalAreaHa, type = "scatter", mode='lines')
graph1plotly
Nr_fires_year_ts <- as_tsibble(Nr_fires_year, index = year, key = n)
graphNr1 <- ggplot(Total_Area_burned_year, aes(x=year, y=TotalAreaHa)) + geom_line()
graphNr1
graph1plotly %>% layout(title = 'Plot Title', xaxis = list(title = 'Year'), font=t, plot_bgcolor = "#e5ecf6",
yaxis = list(title = 'Total Area Burned (Ha)') )
getwd()
library(htmlwidgets)
