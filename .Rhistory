var_test_area <- var.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area)
# Mean comparison tests
if (normality_p1_fires$p.value > 0.05 & normality_p2_fires$p.value > 0.05) {
if (var_test_fires$p.value > 0.05) {
ttest_fires <- t.test(fires_per_year_p1$count, fires_per_year_p2$count, var.equal = TRUE)
} else {
ttest_fires <- t.test(fires_per_year_p1$count, fires_per_year_p2$count, var.equal = FALSE)
}
} else {
ttest_fires <- wilcox.test(fires_per_year_p1$count, fires_per_year_p2$count)
}
if (normality_p1_area$p.value > 0.05 & normality_p2_area$p.value > 0.05) {
if (var_test_area$p.value > 0.05) {
ttest_area <- t.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area, var.equal = TRUE)
} else {
ttest_area <- t.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area, var.equal = FALSE)
}
} else {
ttest_area <- wilcox.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area)
}
# Results
list(
desc_p1_fires = desc_p1_fires,
desc_p2_fires = desc_p2_fires,
desc_p1_area = desc_p1_area,
desc_p2_area = desc_p2_area,
normality_p1_fires = normality_p1_fires,
normality_p2_fires = normality_p2_fires,
normality_p1_area = normality_p1_area,
normality_p2_area = normality_p2_area,
var_test_fires = var_test_fires,
var_test_area = var_test_area,
ttest_fires = ttest_fires,
ttest_area = ttest_area
)
Nr_fires_year_disag <- Nr_fires_year %>% ungroup()
Nr_fires_year_ts <- as_tsibble(Nr_fires_year_disag, index = year)
fit <- Nr_fires_year_ts %>%
model(auto = ARIMA(n, stepwise = FALSE, approx = FALSE)   )
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
View(Nr_fires_year_disag)
Nr_fires_year_disag <- Nr_fires_year %>% ungroup()
Nr_fires_year_ts <- as_tsibble(Nr_fires_year_disag, index = derived_year)
fit <- Nr_fires_year_ts %>%
model(auto = ARIMA(n, stepwise = FALSE, approx = FALSE)   )
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
fit |>
select(auto) |>
gg_tsresiduals()
fit |>
forecast(h=5) |>
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts)
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(0,1,4), stepwise = FALSE, approx = FALSE)   )
fit_manual |>
forecast(h=5) |>
filter(.model=='manual014') |>
autoplot(Nr_fires_year_ts)
fit |>
forecast(h=5) |>
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts)
fit |>
forecast(h=5) |>
mutate(value = distributional::dist_truncated(value, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts)
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts)
# Results
list(
desc_p1_fires = desc_p1_fires,
desc_p2_fires = desc_p2_fires,
desc_p1_area = desc_p1_area,
desc_p2_area = desc_p2_area,
normality_p1_fires = normality_p1_fires,
normality_p2_fires = normality_p2_fires,
normality_p1_area = normality_p1_area,
normality_p2_area = normality_p2_area,
var_test_fires = var_test_fires,
var_test_area = var_test_area,
ttest_fires = ttest_fires,
ttest_area = ttest_area
)
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
fitplot <- fit
ggplotly(fitplot)
library(ggplotly)
install.packages('ggplotly')
fit_manual_plot <- fit_manual
fitplot <- fit
ggplotly(fitplot)
fitplot <- fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
ggplotly(fitplot)
View(Nr_fires_year)
View(Total_Area_burned_year)
Total_Area_burned_year_disag <- Total_Area_burned_year %>% ungroup()
Total_Area_burned_year_ts <- as_tsibble(Total_Area_burned_year_disag, index = derived_year)
area_fit <- Total_Area_burned_year_ts %>%
model(auto = ARIMA(n, stepwise = FALSE, approx = FALSE)   )
View(Total_Area_burned_year_ts)
class(Total_Area_burned_year_ts)
area_fit <- Total_Area_burned_year_ts %>%
model(auto = ARIMA(Total_Area_million_Ha, stepwise = FALSE, approx = FALSE)   )
area_fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
area_fit |>
select(auto) |>
gg_tsresiduals()
area_fit |>
forecast(h=5) |>
mutate(Total_Area_million_Ha = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Total_Area_burned_year_ts) + labs(title="Area burnt per year - NSW", x="Year")
area_fit |>
forecast(h=5) |>
mutate(Total_Area_million_Ha = distributional::dist_truncated(Total_Area_million_Ha, 0))  %>%
filter(.model=='auto') |>
autoplot(Total_Area_burned_year_ts) + labs(title="Area burnt per year - NSW", x="Year")
Nr_fires_year_disag <- Nr_fires_year %>% ungroup()
Nr_fires_year_ts <- as_tsibble(Nr_fires_year_disag, index = derived_year)
fit <- Nr_fires_year_ts %>%
model(auto = ARIMA(n, stepwise = FALSE, approx = FALSE)   )
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
libraries <- c('tidyverse', 'lubridate', 'readxl', 'MARSS', "forecast", 'stats', 'gridExtra', 'feasts', 'stats', 'fable', 'plotly', 'tseries', 'urca', 'reshape2', 'formatR')
invisible(lapply(libraries, require , character.only = TRUE))
setwd("~/R_files/PORTFOLIO/Oz_bushfires_ThruininIII/OZ_bushfires")
NSW_fire_history <- read_csv("NSW_fire_history_2024.csv")
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history2 %>%
mutate(derived_year = (as.numeric(sub(".*(\\d{4}).*", "\\1", NSW_fire_history2$Label)) +1) )  %>%
filter (derived_year > 1944)
Total_Area_burned_year <- NSW_fire_history2%>%
group_by(derived_year) %>%
summarize(TotalAreaHa = sum(AreaHa, na.rm = TRUE))
Nr_fires_year <- NSW_fire_history2%>%
group_by(derived_year) %>%
count(derived_year)
Total_Area_burned_year <- as.data.frame(Total_Area_burned_year)
Total_Area_burned_year$derived_year <- as.integer(Total_Area_burned_year$derived_year)
Total_Area_burned_year$TotalAreaHa <- as.integer(Total_Area_burned_year$TotalAreaHa)
Total_Area_burned_year_ts <- as_tsibble(Total_Area_burned_year, index = year, key = TotalAreaHa)
Nr_fires_year_ts <- as_tsibble(Nr_fires_year, index = derived_year, key = n)
Total_Area_burned_year <- Total_Area_burned_year %>% mutate(Total_Area_million_Ha = TotalAreaHa/1000000)
library(tseries)
library(Kendall)
library(forecast)
#### Using Nr. of fires/year data
Nr_fires_year_ts <- ts(Nr_fires_year$n, start = min(Nr_fires_year$derived_year), frequency = 1)
# ADF Test
adf_test <- adf.test(Nr_fires_year_ts)
adf_test
# Load necessary libraries
library(tseries)
library(zoo)
# Filter data for the two periods
period1 <- NSW_fire_history2 %>% filter(derived_year >= 1945 & derived_year <= 1957)
period2 <- NSW_fire_history2 %>% filter(derived_year > 1980 & derived_year <= 2023)
fires_per_year_p1 <- period1 %>% group_by(derived_year) %>% summarize(count = n(), total_area = sum(AreaHa, na.rm = TRUE))
fires_per_year_p2 <- period2 %>% group_by(derived_year) %>% summarize(count = n(), total_area = sum(AreaHa, na.rm = TRUE))
# Descriptive statistics
desc_p1_fires <- summary(fires_per_year_p1$count)
desc_p2_fires <- summary(fires_per_year_p2$count)
desc_p1_area <- summary(fires_per_year_p1$total_area)
desc_p2_area <- summary(fires_per_year_p2$total_area)
# Normality test
normality_p1_fires <- shapiro.test(fires_per_year_p1$count)
normality_p2_fires <- shapiro.test(fires_per_year_p2$count)
normality_p1_area <- shapiro.test(fires_per_year_p1$total_area)
normality_p2_area <- shapiro.test(fires_per_year_p2$total_area)
# Variance test
var_test_fires <- var.test(fires_per_year_p1$count, fires_per_year_p2$count)
var_test_area <- var.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area)
Nr_fires_year_disag <- Nr_fires_year %>% ungroup()
Nr_fires_year_ts <- as_tsibble(Nr_fires_year_disag, index = derived_year)
fit <- Nr_fires_year_ts %>%
model(auto = ARIMA(n, stepwise = FALSE, approx = FALSE)   )
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
fit |>
select(auto) |>
gg_tsresiduals()
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
install.packages('ggthemes')
library(ggthemes)
area_fit |>
forecast(h=5) |>
mutate(Total_Area_million_Ha = distributional::dist_truncated(Total_Area_million_Ha, 0))  %>%
filter(.model=='auto') |>
autoplot(Total_Area_burned_year_ts) + labs(title="Area burnt per year - NSW", x="Year") + theme_economist()
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year") +theme_economist()
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year") + theme_solarized()
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year") + theme_solarized2()
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year") + theme_solarized_2()
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
fitplot <- fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
fitplot + theme(
panel.background = element_rect(fill = "orange",
colour = "orange",
size = 0.5, linetype = "solid"),
)
fitplot + theme(
panel.background = element_rect(fill = "red",
colour = "red",
size = 0.5, linetype = "solid"),
)
fitplot + theme(
panel.background = element_rect(fill = "blue",
colour = "blue",
size = 0.5, linetype = "solid"),
)
fitplot + theme(
panel.background = element_rect(fill = "orangered2",
colour = "orangered2",
size = 0.5, linetype = "solid"),
)
fitplot + theme(
panel.background = element_rect(fill = "orangered1",
colour = "orangered1",
size = 0.5, linetype = "solid"),
)
fitplot + theme(
panel.background = element_rect(fill = "tomato1",
colour = "tomato1",
size = 0.5, linetype = "solid"),
)
fitplot + theme(
panel.background = element_rect(fill = "darkorange",
colour = "darkorange",
size = 0.5, linetype = "solid"),
)
fitplot <- fitplot + theme(
panel.background = element_rect(fill = "darkorange",
colour = "darkorange",
size = 0.5, linetype = "solid"),
)
ggplotly(fitplot)
fitplot
ggplot(Nr_fires_year, aes(x = derived_year, y = n)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Number of Fires per Year with Linear Trend", x = "Year", y = "Number of Fires") +
theme(
panel.background = element_rect(fill = "lightblue",
colour = "steelblue2",
size = 0.5, linetype = "solid"),
)
ggplot(Nr_fires_year, aes(x = derived_year, y = n)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Number of Fires per Year with Linear Trend", x = "Year", y = "Number of Fires") +
theme(
panel.background = element_rect(fill = "steelblue2",
colour = "steelblue2",
size = 0.5, linetype = "solid"),
)
ggplot(Nr_fires_year, aes(x = derived_year, y = n)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Number of Fires per Year with Linear Trend", x = "Year", y = "Number of Fires") +
theme(
panel.background = element_rect(fill = "steelblue1",
colour = "steelblue1",
size = 0.5, linetype = "solid"),
)
ggplot(Nr_fires_year, aes(x = derived_year, y = n)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Number of Fires per Year with Linear Trend", x = "Year", y = "Number of Fires") +
theme(
panel.background = element_rect(fill = "lightsteelblue1",
colour = "lightsteelblue1",
size = 0.5, linetype = "solid"),
)
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
fit |>
select(auto) |>
)
fitplot <- fitplot + theme(
panel.background = element_rect(fill = "goldenrod",
colour = "darkorange",
size = 0.5, linetype = "solid"),
)
fitplot <- fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
fitplot <- fitplot + theme(
panel.background = element_rect(fill = "goldenrod",
colour = "darkorange",
size = 0.5, linetype = "solid"),
)
fitplot
fitplot <- fitplot + theme(
panel.background = element_rect(fill = "navajowhite2",
colour = "darkorange",
size = 0.5, linetype = "solid"),
)
fitplot
libraries <- c('tidyverse', 'lubridate', 'readxl', 'MARSS', "forecast", 'stats', 'gridExtra', 'feasts', 'stats', 'fable', 'plotly', 'tseries', 'urca', 'reshape2', 'formatR')
invisible(lapply(libraries, require , character.only = TRUE))
NSW_fire_history <- read_csv("NSW_fire_history_2024.csv")
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history <- read_csv("NSW_fire_history_2024.csv")
NSW_fire_history2 <- NSW_fire_history %>% filter(grepl('[Wd]ild', Label))
NSW_fire_history2 <- NSW_fire_history2 %>%
mutate(derived_year = (as.numeric(sub(".*(\\d{4}).*", "\\1", NSW_fire_history2$Label)) +1) )  %>%
filter (derived_year > 1944)
Total_Area_burned_year <- NSW_fire_history2%>%
group_by(derived_year) %>%
summarize(TotalAreaHa = sum(AreaHa, na.rm = TRUE))
Nr_fires_year <- NSW_fire_history2%>%
group_by(derived_year) %>%
count(derived_year)
Total_Area_burned_year <- as.data.frame(Total_Area_burned_year)
Total_Area_burned_year$derived_year <- as.integer(Total_Area_burned_year$derived_year)
Total_Area_burned_year$TotalAreaHa <- as.integer(Total_Area_burned_year$TotalAreaHa)
Total_Area_burned_year_ts <- as_tsibble(Total_Area_burned_year, index = year, key = TotalAreaHa)
Nr_fires_year_ts <- as_tsibble(Nr_fires_year, index = derived_year, key = n)
Total_Area_burned_year <- Total_Area_burned_year %>% mutate(Total_Area_million_Ha = TotalAreaHa/1000000)
library(Kendall)
Total_Area_burned_year_ts <- as_tsibble(Total_Area_burned_year, index = derived_year, key = TotalAreaHa)
#### Using Nr. of fires/year data
Nr_fires_year_ts <- ts(Nr_fires_year$n, start = min(Nr_fires_year$derived_year), frequency = 1)
# ADF Test
adf_test <- adf.test(Nr_fires_year_ts)
adf_test
# Load necessary libraries
library(tseries)
library(zoo)
# Filter data for the two periods
period1 <- NSW_fire_history2 %>% filter(derived_year >= 1945 & derived_year <= 1957)
period2 <- NSW_fire_history2 %>% filter(derived_year > 1980 & derived_year <= 2023)
fires_per_year_p1 <- period1 %>% group_by(derived_year) %>% summarize(count = n(), total_area = sum(AreaHa, na.rm = TRUE))
fires_per_year_p2 <- period2 %>% group_by(derived_year) %>% summarize(count = n(), total_area = sum(AreaHa, na.rm = TRUE))
# Descriptive statistics
desc_p1_fires <- summary(fires_per_year_p1$count)
desc_p2_fires <- summary(fires_per_year_p2$count)
desc_p1_area <- summary(fires_per_year_p1$total_area)
desc_p2_area <- summary(fires_per_year_p2$total_area)
# Normality test
normality_p1_fires <- shapiro.test(fires_per_year_p1$count)
normality_p2_fires <- shapiro.test(fires_per_year_p2$count)
normality_p1_area <- shapiro.test(fires_per_year_p1$total_area)
normality_p2_area <- shapiro.test(fires_per_year_p2$total_area)
# Variance test
var_test_fires <- var.test(fires_per_year_p1$count, fires_per_year_p2$count)
var_test_area <- var.test(fires_per_year_p1$total_area, fires_per_year_p2$total_area)
Nr_fires_year_disag <- Nr_fires_year %>% ungroup()
Nr_fires_year_ts <- as_tsibble(Nr_fires_year_disag, index = derived_year)
Nr_fires_year_disag <- Nr_fires_year %>% ungroup()
Nr_fires_year_ts <- as_tsibble(Nr_fires_year_disag, index = derived_year)
fit <- Nr_fires_year_ts %>%
model(auto = ARIMA(n, stepwise = FALSE, approx = FALSE)   )
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
fit |>
select(auto) |>
gg_tsresiduals()
fitplot <- fit |>
forecast(h=10) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
fitplot <- fitplot + theme(
panel.background = element_rect(fill = "navajowhite2",
colour = "darkorange",
size = 0.5, linetype = "solid"),
)
fitplot
Total_Area_burned_year_disag <- Total_Area_burned_year %>% ungroup()
Total_Area_burned_year_ts <- as_tsibble(Total_Area_burned_year_disag, index = derived_year)
area_fit <- Total_Area_burned_year_ts %>%
model(auto = ARIMA(Total_Area_million_Ha, stepwise = FALSE, approx = FALSE)   )
area_fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
area_fit |>
select(auto) |>
gg_tsresiduals()
area_fit |>
forecast(h=5) |>
mutate(Total_Area_million_Ha = distributional::dist_truncated(Total_Area_million_Ha, 0))  %>%
filter(.model=='auto') |>
autoplot(Total_Area_burned_year_ts) + labs(title="Area burnt per year - NSW", x="Year") + theme_economist()
area_fit |>
forecast(h=5) |>
mutate(Total_Area_million_Ha = distributional::dist_truncated(Total_Area_million_Ha, 0))  %>%
filter(.model=='auto') |>
autoplot(Total_Area_burned_year_ts) + labs(title="Area burnt per year - NSW", x="Year")
Nr_fires_year_disag <- Nr_fires_year %>% ungroup()
Nr_fires_year_ts <- as_tsibble(Nr_fires_year_disag, index = derived_year)
fit <- Nr_fires_year_ts %>%
model(auto = ARIMA(n, stepwise = FALSE)   )
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
fit |>
select(auto) |>
gg_tsresiduals()
fitplot <- fit |>
forecast(h=10) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
fitplot
rm(fitplot)
fit <- Nr_fires_year_ts %>%
model(auto = ARIMA(n, stepwise = FALSE)   )
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
fit |>
select(auto) |>
gg_tsresiduals()
fitplot <- fit |>
forecast(h=5) |>
mutate(n = distributional::dist_truncated(n, 0))  %>%
filter(.model=='auto') |>
autoplot(Nr_fires_year_ts) + labs(title="Number of fires per year - NSW", x="Year")
fitplot
Total_Area_burned_year_disag <- Total_Area_burned_year %>% ungroup()
Total_Area_burned_year_ts <- as_tsibble(Total_Area_burned_year_disag, index = derived_year)
area_fit <- Total_Area_burned_year_ts %>%
model(auto = ARIMA(Total_Area_million_Ha, stepwise = FALSE, approx = FALSE)   )
area_fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
area_fit |>
select(auto) |>
gg_tsresiduals()
area_fit |>
forecast(h=5) |>
mutate(Total_Area_million_Ha = distributional::dist_truncated(Total_Area_million_Ha, 0))  %>%
filter(.model=='auto') |>
autoplot(Total_Area_burned_year_ts) + labs(title="Area burnt per year - NSW", x="Year")
area_fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(4,1,4), stepwise = FALSE, approx = FALSE)   )
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(0,1,4), stepwise = FALSE, approx = FALSE)   )
fit_manual |>
forecast(h=5) |>
filter(.model=='manual014') |>
autoplot(Nr_fires_year_ts)
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(0,1,4), stepwise = FALSE, approx = FALSE)   )
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(4,1,4))  )
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(5,1,4))  )
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(3,1,4))  )
fit_manual <- Nr_fires_year_ts %>%
model(manual014 = ARIMA(n ~ pdq(4,1,3))  )
install.packages('RCurl')
library(RCurl)
